// Generated by CoffeeScript 1.7.1
var Bot, Paddle, Player,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Paddle = (function(_super) {
  __extends(Paddle, _super);

  function Paddle() {
    Paddle.__super__.constructor.call(this);
    this.width = 20;
    this.height = 100;
    this.y = game.height / 2 - this.height / 2;
    this.score = 0;
    this.speed = 15;
  }

  Paddle.prototype.update = function() {
    Paddle.__super__.update.call(this);
    return this.y = Math.min(Math.max(this.y, 0), game.height - this.height);
  };

  return Paddle;

})(Entity);

Player = (function(_super) {
  __extends(Player, _super);

  function Player() {
    Player.__super__.constructor.call(this);
    this.x = 20;
  }

  Player.prototype.update = function() {
    Player.__super__.update.call(this);
    if (game.keyPressed.up) {
      return this.yVelocity = -this.speed;
    } else if (game.keyPressed.down) {
      return this.yVelocity = this.speed;
    } else {
      return this.yVelocity = 0;
    }
  };

  return Player;

})(Paddle);

Bot = (function(_super) {
  __extends(Bot, _super);

  function Bot() {
    Bot.__super__.constructor.call(this);
    this.speed = 5;
    this.x = game.width - this.width - 20;
  }

  Bot.prototype.update = function() {
    Bot.__super__.update.call(this);
    if (this.y < game.ball.y) {
      return this.yVelocity = this.speed;
    } else if (this.y > game.ball.y) {
      return this.yVelocity = -this.speed;
    }
  };

  return Bot;

})(Paddle);
